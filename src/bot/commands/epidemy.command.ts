import { stripIndent } from 'common-tags'
import {
  ActionRowBuilder,
  ButtonBuilder,
  ButtonInteraction,
  ButtonStyle,
  CommandInteraction,
  EmbedBuilder,
  PermissionsBitField
} from 'discord.js'
import { ButtonComponent, Discord, Slash } from 'discordx'

import { Color, VIRUS_NAME } from '../../constants'
import { CitizenService } from '../../services/citizen.service'
import { ServerService } from '../../services/server.service'

const startButtonId = 'start-epidemic'

@Discord()
export class EpidemyCommand {
  private readonly serverService = new ServerService()
  private readonly citizenService = new CitizenService()

  @Slash({
    name: '—Å—Ç–∞—Ç—É—Å-—ç–ø–∏–¥–µ–º–∏–∏',
    description: '–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —ç–ø–∏–¥–µ–º–∏–∏'
  })
  public async status(command: CommandInteraction) {
    const server = await this.serverService.getOne({
      guildId: command.guildId!
    })

    if (!server || !server.isActive) {
      throw new Error('Server not found or inactive')
    }

    // prettier-ignore
    const embed = new EmbedBuilder()
      .setTitle('–°—Ç–∞—Ç—É—Å —ç–ø–∏–¥–µ–º–∏–∏')
      .setColor(Color.Green)
      .setFields([{
        name: '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
        value: 'üü¢ –°—Ç–∞–±–∏–ª—å–Ω–æ–µ'
      }])
      .setDescription(stripIndent`
        **${VIRUS_NAME}** ‚Äî –æ–±–æ–ª–æ—á–µ—á–Ω—ã–π –æ–¥–Ω–æ—Ü–µ–ø–æ—á–Ω—ã–π –†–ù–ö-–≤–∏—Ä—É—Å. –°–æ–∑–¥–∞–Ω –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –ö–æ–±—Ä–∞—Å—Ç–∞–Ω—Å–∫–æ–π –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ "Nekobiotics" –≤ 2019 –≥–æ–¥—É –∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ—Ä—É–∂–∏—è.

        –í–ø–µ—Ä–≤—ã–µ –≤—ã—è–≤–ª–µ–Ω –≤ –Ω–æ—è–±—Ä–µ 2023 –≥–æ–¥–∞ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–µ –æ–ø–∞—Å–Ω–æ–µ –∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ.
      `)

    if (server.isEpidemic) {
      // prettier-ignore
      embed
        .setColor(Color.Red)
        .setFields([{
          name: '–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
          value: 'üî¥ –≠–ø–∏–¥–µ–º–∏—è'
        }])
    }

    await command.reply({
      embeds: [embed]
    })
  }

  @Slash({
    name: '–Ω–∞—á–∞—Ç—å-—ç–ø–∏–¥–µ–º–∏—é',
    description: '–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≥—Ä–∞–∂–¥–∞–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∑–∞—Ä–∞–∑—è—Ç—Å—è –≤–∏—Ä—É—Å–æ–º',
    defaultMemberPermissions: [PermissionsBitField.Flags.Administrator]
  })
  public async startEpidemy(command: CommandInteraction) {
    const server = await this.serverService.getOne({
      guildId: command.guildId!
    })

    if (!server || !server.isActive) {
      throw new Error('Server not found or inactive')
    }

    if (server.isEpidemic) {
      return command.reply({
        ephemeral: true,
        content: '–≠–ø–∏–¥–µ–º–∏—è —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!'
      })
    }

    await command.reply({
      embeds: [
        new EmbedBuilder()
          .setTitle('–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!')
          .setColor(Color.Red)
          .setDescription(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —ç–ø–∏–¥–µ–º–∏—é? –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≥—Ä–∞–∂–¥–∞–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∑–∞—Ä–∞–∑—è—Ç—Å—è –≤–∏—Ä—É—Å–æ–º!'
          )
      ],
      components: [
        new ActionRowBuilder<ButtonBuilder>().addComponents([
          new ButtonBuilder()
            .setCustomId(startButtonId)
            .setStyle(ButtonStyle.Danger)
            .setLabel('–î–∞, –Ω–∞—á–∞—Ç—å —ç–ø–∏–¥–µ–º–∏—é')
            .setEmoji('üíÄ')
        ])
      ]
    })
  }

  @ButtonComponent({
    id: startButtonId
  })
  public async onStartEpidemy(interaction: ButtonInteraction) {
    const member = await interaction.guild?.members.fetch(interaction.user.id)

    // prettier-ignore
    if (!member || !member.permissions.has(PermissionsBitField.Flags.Administrator)) {
      return
    }

    await interaction.deferReply()

    const server = await this.serverService.getOne({
      guildId: interaction.guildId!
    })

    if (!server || !server.isActive) {
      throw new Error('Server not found or inactive')
    }

    if (server.isEpidemic) {
      return interaction.followUp({
        content: '–≠–ø–∏–¥–µ–º–∏—è —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!'
      })
    }

    await this.serverService.update({
      id: server.id,
      data: {
        isEpidemic: true
      }
    })

    const citizens = await this.citizenService.getList({
      serverId: server.id
    })

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≥—Ä–∞–∂–¥–∞–Ω –∏ –±–µ—Ä—ë–º 10%
    const shuffledCitizens = citizens.sort(() => Math.random() - 0.5)
    const citizensToInfect = shuffledCitizens.slice(
      0,
      Math.floor(citizens.length * 0.1)
    )

    await Promise.all(
      citizensToInfect.map((citizen) =>
        this.citizenService.markInfected(citizen, false)
      )
    )

    // prettier-ignore
    await interaction.followUp({
      embeds: [
        new EmbedBuilder({
          title: '–ö–æ–Ω–µ—Ü –±–ª–∏–∑–æ–∫',
          color: Color.Red,
          description: stripIndent`
            –ù—É–ª–µ–≤–æ–π –ø–∞—Ü–∏–µ–Ω—Ç —Å–∫–æ–Ω—á–∞–ª—Å—è, –∏ —Å –µ–≥–æ —Å–º–µ—Ä—Ç—å—é –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ—Ä—É–∂–∏–µ **${VIRUS_NAME}** –Ω–∞—á–∞–ª–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.
            –ü–µ—Ä–≤—ã–µ **${citizensToInfect.length.toLocaleString('ru')}** –≥—Ä–∞–∂–¥–∞–Ω —É–∂–µ –∑–∞—Ä–∞–∑–∏–ª–∏—Å—å –≤–∏—Ä—É—Å–æ–º.
          `
        })
      ]
    })
  }
}
